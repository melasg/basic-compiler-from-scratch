/* MINI-L BNF Grammar specification
 * Melody Asghari
 * July 10, 2021
 * made by hand, diagrams generated on https://bottlecaps.de/rr/ui
 */
Program  ::= Function*
Function ::= 'function' 'identifier' ';' 'beginparams' ( Declaration ';' )* 'endparams' 'beginlocals' ( Declaration ';' )* 'endlocals' 'beginbody' ( Statement ';' )+ 'endbody'
Declaration
         ::= ( 'identifier' ';' )+ ':' 'array' '[' 'number' ']' 'of' 'integer'
Statement
         ::= ( var ':=' | 'return' ) Expression
           | 'if' BooleanExpression 'then' ( Statement ';' )* 'else' ( Statement ';' )+ 'endif'
           | 'while' BooleanExpression 'beginloop' ( Statement ';' )+ 'endloop'
           | 'do' 'beginloop' ( Statement ';' )+ 'endloop' 'while' BooleanExpression
           | ( 'read' | 'write' ) ( var ',' )+
           | 'continue'
BooleanExpression
         ::= RelationshipAndExpression
           | ( 'OR' RelationshipAndExpression )+
RelationshipAndExpression
         ::= RelationshipExpression
           | ( 'AND' RelationshipExpression )+
RelationshipExpression
         ::= 'NOT'* ( Expression Comp Expression | 'true' | 'false' | '(' BooleanExpression ')' )
Comp     ::= 'eq'
           | 'ne'
           | 'lt'
           | 'le'
           | 'gt'
           | 'ge'
Expression
         ::= ( '+' | '-' )? MultiplicativeExpression
MultiplicativeExpression
         ::= ( '*' | '/' | '%' )? Term
Term     ::= '-'* ( var | 'number' | '(' Expression ')' )?
           | 'identifier' '(' ( Expression ',' )* ')'
var      ::= 'identifier' ( '[' Expression ']' )?