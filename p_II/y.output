Grammar

    0 $accept: Program $end

    1 Program: prog_to_feu

    2 prog_to_feu: /* empty */
    3            | function prog_to_feu

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: /* empty */
    6             | declaration SEMICOLON declarations
    7             | declaration error declarations

    8 declaration: identz COLON assignment
    9            | identz error assignment

   10 statements: statement SEMICOLON
   11           | statement error
   12           | statements statement SEMICOLON
   13           | statements statement error

   14 assignment: INTEGER
   15           | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   16           | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   17 statement: var ASSIGN expression
   18          | var error expression
   19          | IF bool_expr THEN statements ENDIF
   20          | IF bool_expr THEN statements ELSE statements ENDIF
   21          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   22          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   23          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   24          | FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   25          | FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statements ENDLOOP
   26          | READ varz
   27          | WRITE varz
   28          | CONTINUE
   29          | RETURN expression

   30 bool_expr: relation_and_expr bool_exprz

   31 bool_exprz: /* empty */
   32           | bool_exprz OR relation_and_expr

   33 relation_and_expr: relation_expr r_a_ez

   34 r_a_ez: /* empty */
   35       | r_a_ez AND relation_expr

   36 relation_expr: relations
   37              | NOT relations

   38 relations: expression comp expression
   39          | TRUE
   40          | FALSE
   41          | L_PAREN bool_expr R_PAREN

   42 comp: EQ
   43     | NEQ
   44     | LT
   45     | GT
   46     | LTE
   47     | GTE

   48 expression: multiplicative_expr expressions

   49 expressions: /* empty */
   50            | expressions ADD multiplicative_expr
   51            | expressions SUB multiplicative_expr

   52 multiplicative_expr: term multiplicative_group

   53 multiplicative_group: /* empty */
   54                     | multiplicative_group MULT term
   55                     | multiplicative_group DIV term
   56                     | multiplicative_group MOD term

   57 term: precedence
   58     | SUB precedence
   59     | ident L_PAREN term_comma_err R_PAREN
   60     | L_PAREN R_PAREN

   61 term_comma_err: expression
   62               | expression COMMA term_comma_err
   63               | expression error term_comma_err

   64 precedence: var
   65           | NUMBER
   66           | L_PAREN expression R_PAREN

   67 varz: var
   68     | var COMMA varz
   69     | var varz

   70 var: ident
   71    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   72    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   73 identz: ident
   74       | identz COMMA ident
   75       | identz error ident

   76 ident: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256) 7 9 11 13 18 24 25 63 75
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 14 15 16
ARRAY (266) 15 16
OF (267) 15 16
IF (268) 19 20
THEN (269) 19 20
ENDIF (270) 19 20
ELSE (271) 20
WHILE (272) 21 22
DO (273) 22
FOR (274) 23 24 25
BEGINLOOP (275) 21 22 23 24 25
ENDLOOP (276) 21 22 23 24 25
CONTINUE (277) 28
READ (278) 26
WRITE (279) 27
AND (280) 35
OR (281) 32
TRUE (282) 39
FALSE (283) 40
RETURN (284) 29
SEMICOLON (285) 4 6 10 12 23 24 25
COLON (286) 8
COMMA (287) 62 68 74
L_PAREN (288) 41 59 60 66
R_PAREN (289) 41 59 60 66
L_SQUARE_BRACKET (290) 15 16 71 72
R_SQUARE_BRACKET (291) 15 16 71 72
IDENT (292) 76
NUMBER (293) 15 16 23 24 25 65
GTE (294) 47
LTE (295) 46
GT (296) 45
LT (297) 44
NEQ (298) 43
EQ (299) 42
MOD (300) 56
DIV (301) 55
MULT (302) 54
ADD (303) 50
SUB (304) 51 58
UMINUS (305)
ASSIGN (306) 17 23 24 25
NOT (307) 37


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1, on right: 0
prog_to_feu (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6 7, on right: 4 6 7
declaration (58)
    on left: 8 9, on right: 6 7
statements (59)
    on left: 10 11 12 13, on right: 4 12 13 19 20 21 22 23 24 25
assignment (60)
    on left: 14 15 16, on right: 8 9
statement (61)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29,
    on right: 10 11 12 13
bool_expr (62)
    on left: 30, on right: 19 20 21 22 23 24 25 41
bool_exprz (63)
    on left: 31 32, on right: 30 32
relation_and_expr (64)
    on left: 33, on right: 30 32
r_a_ez (65)
    on left: 34 35, on right: 33 35
relation_expr (66)
    on left: 36 37, on right: 33 35
relations (67)
    on left: 38 39 40 41, on right: 36 37
comp (68)
    on left: 42 43 44 45 46 47, on right: 38
expression (69)
    on left: 48, on right: 17 18 23 24 25 29 38 61 62 63 66 71 72
expressions (70)
    on left: 49 50 51, on right: 48 50 51
multiplicative_expr (71)
    on left: 52, on right: 48 50 51
multiplicative_group (72)
    on left: 53 54 55 56, on right: 52 54 55 56
term (73)
    on left: 57 58 59 60, on right: 52 54 55 56
term_comma_err (74)
    on left: 61 62 63, on right: 59 62 63
precedence (75)
    on left: 64 65 66, on right: 57 58
varz (76)
    on left: 67 68 69, on right: 26 27 68 69
var (77)
    on left: 70 71 72, on right: 17 18 23 24 25 64 67 68 69
identz (78)
    on left: 73 74 75, on right: 8 9 74 75
ident (79)
    on left: 76, on right: 4 59 70 71 72 73 74 75


state 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (prog_to_feu)

    Program      go to state 2
    prog_to_feu  go to state 3
    function     go to state 4


state 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 7


state 3

    1 Program: prog_to_feu .

    $default  reduce using rule 1 (Program)


state 4

    3 prog_to_feu: function . prog_to_feu

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (prog_to_feu)

    prog_to_feu  go to state 8
    function     go to state 4


state 5

   76 ident: IDENT .

    $default  reduce using rule 76 (ident)


state 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


state 7

    0 $accept: Program $end .

    $default  accept


state 8

    3 prog_to_feu: function prog_to_feu .

    $default  reduce using rule 3 (prog_to_feu)


state 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


state 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identz        go to state 13
    ident         go to state 14


state 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


state 12

    6 declarations: declaration . SEMICOLON declarations
    7             | declaration . error declarations

    error      shift, and go to state 16
    SEMICOLON  shift, and go to state 17


state 13

    8 declaration: identz . COLON assignment
    9            | identz . error assignment
   74 identz: identz . COMMA ident
   75       | identz . error ident

    error  shift, and go to state 18
    COLON  shift, and go to state 19
    COMMA  shift, and go to state 20


state 14

   73 identz: ident .

    $default  reduce using rule 73 (identz)


state 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


state 16

    7 declarations: declaration error . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 22
    declaration   go to state 12
    identz        go to state 13
    ident         go to state 14


state 17

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 12
    identz        go to state 13
    ident         go to state 14


state 18

    9 declaration: identz error . assignment
   75 identz: identz error . ident

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25
    IDENT    shift, and go to state 5

    assignment  go to state 26
    ident       go to state 27


state 19

    8 declaration: identz COLON . assignment

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    assignment  go to state 28


state 20

   74 identz: identz COMMA . ident

    IDENT  shift, and go to state 5

    ident  go to state 29


state 21

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 30
    declaration   go to state 12
    identz        go to state 13
    ident         go to state 14


state 22

    7 declarations: declaration error declarations .

    $default  reduce using rule 7 (declarations)


state 23

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


state 24

   14 assignment: INTEGER .

    $default  reduce using rule 14 (assignment)


state 25

   15 assignment: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   16           | ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 31


state 26

    9 declaration: identz error assignment .

    $default  reduce using rule 9 (declaration)


state 27

   75 identz: identz error ident .

    $default  reduce using rule 75 (identz)


state 28

    8 declaration: identz COLON assignment .

    $default  reduce using rule 8 (declaration)


state 29

   74 identz: identz COMMA ident .

    $default  reduce using rule 74 (identz)


state 30

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 32


state 31

   15 assignment: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   16           | ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 33


state 32

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


state 33

   15 assignment: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   16           | ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 35


state 34

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statements  go to state 44
    statement   go to state 45
    var         go to state 46
    ident       go to state 47


state 35

   15 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   16           | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 48
    L_SQUARE_BRACKET  shift, and go to state 49


state 36

   19 statement: IF . bool_expr THEN statements ENDIF
   20          | IF . bool_expr THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    L_PAREN  shift, and go to state 52
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55

    bool_expr            go to state 56
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    relations            go to state 59
    expression           go to state 60
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 37

   21 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    L_PAREN  shift, and go to state 52
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55

    bool_expr            go to state 66
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    relations            go to state 59
    expression           go to state 60
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 38

   22 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 67


state 39

   23 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   24          | FOR . var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   25          | FOR . var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    var    go to state 68
    ident  go to state 47


state 40

   28 statement: CONTINUE .

    $default  reduce using rule 28 (statement)


state 41

   26 statement: READ . varz

    IDENT  shift, and go to state 5

    varz   go to state 69
    var    go to state 70
    ident  go to state 47


state 42

   27 statement: WRITE . varz

    IDENT  shift, and go to state 5

    varz   go to state 71
    var    go to state 70
    ident  go to state 47


state 43

   29 statement: RETURN . expression

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 73
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 44

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY
   12 statements: statements . statement SEMICOLON
   13           | statements . statement error

    END_BODY  shift, and go to state 74
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 75
    var        go to state 46
    ident      go to state 47


state 45

   10 statements: statement . SEMICOLON
   11           | statement . error

    error      shift, and go to state 76
    SEMICOLON  shift, and go to state 77


state 46

   17 statement: var . ASSIGN expression
   18          | var . error expression

    error   shift, and go to state 78
    ASSIGN  shift, and go to state 79


state 47

   70 var: ident .
   71    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   72    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 80

    $default  reduce using rule 70 (var)


state 48

   15 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 81


state 49

   16 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 82


state 50

   39 relations: TRUE .

    $default  reduce using rule 39 (relations)


state 51

   40 relations: FALSE .

    $default  reduce using rule 40 (relations)


state 52

   41 relations: L_PAREN . bool_expr R_PAREN
   60 term: L_PAREN . R_PAREN
   66 precedence: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    L_PAREN  shift, and go to state 52
    R_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55

    bool_expr            go to state 84
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    relations            go to state 59
    expression           go to state 85
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 53

   65 precedence: NUMBER .

    $default  reduce using rule 65 (precedence)


state 54

   58 term: SUB . precedence

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53

    precedence  go to state 87
    var         go to state 64
    ident       go to state 47


state 55

   37 relation_expr: NOT . relations

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    L_PAREN  shift, and go to state 52
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    relations            go to state 88
    expression           go to state 60
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 56

   19 statement: IF bool_expr . THEN statements ENDIF
   20          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 89


state 57

   30 bool_expr: relation_and_expr . bool_exprz

    $default  reduce using rule 31 (bool_exprz)

    bool_exprz  go to state 90


state 58

   33 relation_and_expr: relation_expr . r_a_ez

    $default  reduce using rule 34 (r_a_ez)

    r_a_ez  go to state 91


state 59

   36 relation_expr: relations .

    $default  reduce using rule 36 (relation_expr)


state 60

   38 relations: expression . comp expression

    GTE  shift, and go to state 92
    LTE  shift, and go to state 93
    GT   shift, and go to state 94
    LT   shift, and go to state 95
    NEQ  shift, and go to state 96
    EQ   shift, and go to state 97

    comp  go to state 98


state 61

   48 expression: multiplicative_expr . expressions

    $default  reduce using rule 49 (expressions)

    expressions  go to state 99


state 62

   52 multiplicative_expr: term . multiplicative_group

    $default  reduce using rule 53 (multiplicative_group)

    multiplicative_group  go to state 100


state 63

   57 term: precedence .

    $default  reduce using rule 57 (term)


state 64

   64 precedence: var .

    $default  reduce using rule 64 (precedence)


state 65

   59 term: ident . L_PAREN term_comma_err R_PAREN
   70 var: ident .
   71    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   72    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 80

    $default  reduce using rule 70 (var)


state 66

   21 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 102


state 67

   22 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statements  go to state 103
    statement   go to state 45
    var         go to state 46
    ident       go to state 47


state 68

   23 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   24          | FOR var . ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   25          | FOR var . ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 104


state 69

   26 statement: READ varz .

    $default  reduce using rule 26 (statement)


state 70

   67 varz: var .
   68     | var . COMMA varz
   69     | var . varz

    COMMA  shift, and go to state 105
    IDENT  shift, and go to state 5

    $default  reduce using rule 67 (varz)

    varz   go to state 106
    var    go to state 70
    ident  go to state 47


state 71

   27 statement: WRITE varz .

    $default  reduce using rule 27 (statement)


state 72

   60 term: L_PAREN . R_PAREN
   66 precedence: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 72
    R_PAREN  shift, and go to state 83
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 107
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 73

   29 statement: RETURN expression .

    $default  reduce using rule 29 (statement)


state 74

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


state 75

   12 statements: statements statement . SEMICOLON
   13           | statements statement . error

    error      shift, and go to state 108
    SEMICOLON  shift, and go to state 109


state 76

   11 statements: statement error .

    $default  reduce using rule 11 (statements)


state 77

   10 statements: statement SEMICOLON .

    $default  reduce using rule 10 (statements)


state 78

   18 statement: var error . expression

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 110
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 79

   17 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 111
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 80

   71 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   72    | ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 112
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 81

   15 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 15 (assignment)


state 82

   16 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 113


state 83

   60 term: L_PAREN R_PAREN .

    $default  reduce using rule 60 (term)


state 84

   41 relations: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 114


state 85

   38 relations: expression . comp expression
   66 precedence: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 115
    GTE      shift, and go to state 92
    LTE      shift, and go to state 93
    GT       shift, and go to state 94
    LT       shift, and go to state 95
    NEQ      shift, and go to state 96
    EQ       shift, and go to state 97

    comp  go to state 98


state 86

   66 precedence: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 107
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 87

   58 term: SUB precedence .

    $default  reduce using rule 58 (term)


state 88

   37 relation_expr: NOT relations .

    $default  reduce using rule 37 (relation_expr)


state 89

   19 statement: IF bool_expr THEN . statements ENDIF
   20          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statements  go to state 116
    statement   go to state 45
    var         go to state 46
    ident       go to state 47


state 90

   30 bool_expr: relation_and_expr bool_exprz .
   32 bool_exprz: bool_exprz . OR relation_and_expr

    OR  shift, and go to state 117

    $default  reduce using rule 30 (bool_expr)


state 91

   33 relation_and_expr: relation_expr r_a_ez .
   35 r_a_ez: r_a_ez . AND relation_expr

    AND  shift, and go to state 118

    $default  reduce using rule 33 (relation_and_expr)


state 92

   47 comp: GTE .

    $default  reduce using rule 47 (comp)


state 93

   46 comp: LTE .

    $default  reduce using rule 46 (comp)


state 94

   45 comp: GT .

    $default  reduce using rule 45 (comp)


state 95

   44 comp: LT .

    $default  reduce using rule 44 (comp)


state 96

   43 comp: NEQ .

    $default  reduce using rule 43 (comp)


state 97

   42 comp: EQ .

    $default  reduce using rule 42 (comp)


state 98

   38 relations: expression comp . expression

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 119
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 99

   48 expression: multiplicative_expr expressions .
   50 expressions: expressions . ADD multiplicative_expr
   51            | expressions . SUB multiplicative_expr

    ADD  shift, and go to state 120
    SUB  shift, and go to state 121

    $default  reduce using rule 48 (expression)


state 100

   52 multiplicative_expr: term multiplicative_group .
   54 multiplicative_group: multiplicative_group . MULT term
   55                     | multiplicative_group . DIV term
   56                     | multiplicative_group . MOD term

    MOD   shift, and go to state 122
    DIV   shift, and go to state 123
    MULT  shift, and go to state 124

    $default  reduce using rule 52 (multiplicative_expr)


state 101

   59 term: ident L_PAREN . term_comma_err R_PAREN

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 125
    multiplicative_expr  go to state 61
    term                 go to state 62
    term_comma_err       go to state 126
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 102

   21 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statements  go to state 127
    statement   go to state 45
    var         go to state 46
    ident       go to state 47


state 103

   12 statements: statements . statement SEMICOLON
   13           | statements . statement error
   22 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 128
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 75
    var        go to state 46
    ident      go to state 47


state 104

   23 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   24          | FOR var ASSIGN . NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   25          | FOR var ASSIGN . NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 129


state 105

   68 varz: var COMMA . varz

    IDENT  shift, and go to state 5

    varz   go to state 130
    var    go to state 70
    ident  go to state 47


state 106

   69 varz: var varz .

    $default  reduce using rule 69 (varz)


state 107

   66 precedence: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 115


state 108

   13 statements: statements statement error .

    $default  reduce using rule 13 (statements)


state 109

   12 statements: statements statement SEMICOLON .

    $default  reduce using rule 12 (statements)


state 110

   18 statement: var error expression .

    $default  reduce using rule 18 (statement)


state 111

   17 statement: var ASSIGN expression .

    $default  reduce using rule 17 (statement)


state 112

   71 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   72    | ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 131


state 113

   16 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 132


state 114

   41 relations: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 41 (relations)


state 115

   66 precedence: L_PAREN expression R_PAREN .

    $default  reduce using rule 66 (precedence)


state 116

   12 statements: statements . statement SEMICOLON
   13           | statements . statement error
   19 statement: IF bool_expr THEN statements . ENDIF
   20          | IF bool_expr THEN statements . ELSE statements ENDIF

    IF        shift, and go to state 36
    ENDIF     shift, and go to state 133
    ELSE      shift, and go to state 134
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 75
    var        go to state 46
    ident      go to state 47


state 117

   32 bool_exprz: bool_exprz OR . relation_and_expr

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    L_PAREN  shift, and go to state 52
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55

    relation_and_expr    go to state 135
    relation_expr        go to state 58
    relations            go to state 59
    expression           go to state 60
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 118

   35 r_a_ez: r_a_ez AND . relation_expr

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    L_PAREN  shift, and go to state 52
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55

    relation_expr        go to state 136
    relations            go to state 59
    expression           go to state 60
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 119

   38 relations: expression comp expression .

    $default  reduce using rule 38 (relations)


state 120

   50 expressions: expressions ADD . multiplicative_expr

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    multiplicative_expr  go to state 137
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 121

   51 expressions: expressions SUB . multiplicative_expr

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    multiplicative_expr  go to state 138
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 122

   56 multiplicative_group: multiplicative_group MOD . term

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    term        go to state 139
    precedence  go to state 63
    var         go to state 64
    ident       go to state 65


state 123

   55 multiplicative_group: multiplicative_group DIV . term

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    term        go to state 140
    precedence  go to state 63
    var         go to state 64
    ident       go to state 65


state 124

   54 multiplicative_group: multiplicative_group MULT . term

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    term        go to state 141
    precedence  go to state 63
    var         go to state 64
    ident       go to state 65


state 125

   61 term_comma_err: expression .
   62               | expression . COMMA term_comma_err
   63               | expression . error term_comma_err

    error  shift, and go to state 142
    COMMA  shift, and go to state 143

    R_PAREN  reduce using rule 61 (term_comma_err)


state 126

   59 term: ident L_PAREN term_comma_err . R_PAREN

    R_PAREN  shift, and go to state 144


state 127

   12 statements: statements . statement SEMICOLON
   13           | statements . statement error
   21 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 145
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 75
    var        go to state 46
    ident      go to state 47


state 128

   22 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 146


state 129

   23 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   24          | FOR var ASSIGN NUMBER . error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   25          | FOR var ASSIGN NUMBER . SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statements ENDLOOP

    error      shift, and go to state 147
    SEMICOLON  shift, and go to state 148


state 130

   68 varz: var COMMA varz .

    $default  reduce using rule 68 (varz)


state 131

   71 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   72    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 149

    $default  reduce using rule 71 (var)


state 132

   16 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 150


state 133

   19 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 19 (statement)


state 134

   20 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statements  go to state 151
    statement   go to state 45
    var         go to state 46
    ident       go to state 47


state 135

   32 bool_exprz: bool_exprz OR relation_and_expr .

    $default  reduce using rule 32 (bool_exprz)


state 136

   35 r_a_ez: r_a_ez AND relation_expr .

    $default  reduce using rule 35 (r_a_ez)


state 137

   50 expressions: expressions ADD multiplicative_expr .

    $default  reduce using rule 50 (expressions)


state 138

   51 expressions: expressions SUB multiplicative_expr .

    $default  reduce using rule 51 (expressions)


state 139

   56 multiplicative_group: multiplicative_group MOD term .

    $default  reduce using rule 56 (multiplicative_group)


state 140

   55 multiplicative_group: multiplicative_group DIV term .

    $default  reduce using rule 55 (multiplicative_group)


state 141

   54 multiplicative_group: multiplicative_group MULT term .

    $default  reduce using rule 54 (multiplicative_group)


state 142

   63 term_comma_err: expression error . term_comma_err

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 125
    multiplicative_expr  go to state 61
    term                 go to state 62
    term_comma_err       go to state 152
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 143

   62 term_comma_err: expression COMMA . term_comma_err

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 125
    multiplicative_expr  go to state 61
    term                 go to state 62
    term_comma_err       go to state 153
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 144

   59 term: ident L_PAREN term_comma_err R_PAREN .

    $default  reduce using rule 59 (term)


state 145

   21 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


state 146

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    L_PAREN  shift, and go to state 52
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55

    bool_expr            go to state 154
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    relations            go to state 59
    expression           go to state 60
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 147

   24 statement: FOR var ASSIGN NUMBER error . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    L_PAREN  shift, and go to state 52
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55

    bool_expr            go to state 155
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    relations            go to state 59
    expression           go to state 60
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 148

   23 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   25          | FOR var ASSIGN NUMBER SEMICOLON . bool_expr error var ASSIGN expression BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    L_PAREN  shift, and go to state 52
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54
    NOT      shift, and go to state 55

    bool_expr            go to state 156
    relation_and_expr    go to state 57
    relation_expr        go to state 58
    relations            go to state 59
    expression           go to state 60
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 149

   72 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 157
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 150

   16 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 16 (assignment)


state 151

   12 statements: statements . statement SEMICOLON
   13           | statements . statement error
   20 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    IF        shift, and go to state 36
    ENDIF     shift, and go to state 158
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 75
    var        go to state 46
    ident      go to state 47


state 152

   63 term_comma_err: expression error term_comma_err .

    $default  reduce using rule 63 (term_comma_err)


state 153

   62 term_comma_err: expression COMMA term_comma_err .

    $default  reduce using rule 62 (term_comma_err)


state 154

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 22 (statement)


state 155

   24 statement: FOR var ASSIGN NUMBER error bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 159


state 156

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   25          | FOR var ASSIGN NUMBER SEMICOLON bool_expr . error var ASSIGN expression BEGINLOOP statements ENDLOOP

    error      shift, and go to state 160
    SEMICOLON  shift, and go to state 161


state 157

   72 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 162


state 158

   20 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 20 (statement)


state 159

   24 statement: FOR var ASSIGN NUMBER error bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    var    go to state 163
    ident  go to state 47


state 160

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr error . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    var    go to state 164
    ident  go to state 47


state 161

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    var    go to state 165
    ident  go to state 47


state 162

   72 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 72 (var)


state 163

   24 statement: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 166


state 164

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 167


state 165

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 168


state 166

   24 statement: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 169
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 167

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN . expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 170
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 168

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 72
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 53
    SUB      shift, and go to state 54

    expression           go to state 171
    multiplicative_expr  go to state 61
    term                 go to state 62
    precedence           go to state 63
    var                  go to state 64
    ident                go to state 65


state 169

   24 statement: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 172


state 170

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 173


state 171

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 174


state 172

   24 statement: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statements  go to state 175
    statement   go to state 45
    var         go to state 46
    ident       go to state 47


state 173

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statements  go to state 176
    statement   go to state 45
    var         go to state 46
    ident       go to state 47


state 174

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statements  go to state 177
    statement   go to state 45
    var         go to state 46
    ident       go to state 47


state 175

   12 statements: statements . statement SEMICOLON
   13           | statements . statement error
   24 statement: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 178
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 75
    var        go to state 46
    ident      go to state 47


state 176

   12 statements: statements . statement SEMICOLON
   13           | statements . statement error
   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statements . ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 179
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 75
    var        go to state 46
    ident      go to state 47


state 177

   12 statements: statements . statement SEMICOLON
   13           | statements . statement error
   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 180
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 75
    var        go to state 46
    ident      go to state 47


state 178

   24 statement: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 24 (statement)


state 179

   25 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 25 (statement)


state 180

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 23 (statement)
