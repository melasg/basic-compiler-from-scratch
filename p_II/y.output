Grammar

    0 $accept: Program $end

    1 Program: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    5 dec_loop: /* empty */
    6         | declaration SEMICOLON dec_loop
    7         | declaration error dec_loop

    8 statement_loop: statement SEMICOLON
    9               | statement error
   10               | statement_loop statement SEMICOLON
   11               | statement_loop statement error

   12 declaration: id_loop COLON assignment
   13            | id_loop error assignment

   14 id_loop: ident
   15        | id_loop COMMA ident
   16        | id_loop error ident

   17 assignment: INTEGER
   18           | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   19           | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   20 statement: A
   21          | B
   22          | C
   23          | D
   24          | E
   25          | F
   26          | G
   27          | H
   28          | I

   29 A: var ASSIGN expression
   30  | var error expression

   31 B: IF bool_expr THEN statement_loop ENDIF
   32  | IF bool_expr THEN statement_loop ELSE statement_loop ENDIF

   33 C: WHILE bool_expr BEGINLOOP statement_loop ENDLOOP

   34 D: DO BEGINLOOP statement_loop ENDLOOP WHILE bool_expr

   35 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   36  | FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   37  | FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

   38 F: READ var_loop

   39 G: WRITE var_loop

   40 var_loop: var
   41         | var COMMA var_loop
   42         | var var_loop

   43 H: CONTINUE

   44 I: RETURN expression

   45 bool_expr: relation_and_expr bool_expr_loop

   46 bool_expr_loop: /* empty */
   47               | bool_expr_loop OR relation_and_expr

   48 relation_and_expr: relation_expr relation_and_expr_loop

   49 relation_and_expr_loop: /* empty */
   50                       | relation_and_expr_loop AND relation_expr

   51 relation_expr: relations
   52              | NOT relations

   53 relations: expression comp expression
   54          | TRUE
   55          | FALSE
   56          | L_PAREN bool_expr R_PAREN

   57 comp: EQ
   58     | NEQ
   59     | LT
   60     | GT
   61     | LTE
   62     | GTE

   63 expression: multiplicative_expr expression_loop

   64 expression_loop: /* empty */
   65                | expression_loop ADD multiplicative_expr
   66                | expression_loop SUB multiplicative_expr

   67 multiplicative_expr: term multi_loop

   68 multi_loop: /* empty */
   69           | multi_loop MULT term
   70           | multi_loop DIV term
   71           | multi_loop MOD term

   72 term: term_top
   73     | SUB term_top
   74     | ident term_expression

   75 term_top: var
   76         | NUMBER
   77         | L_PAREN expression R_PAREN

   78 term_expression: L_PAREN term_exp R_PAREN
   79                | L_PAREN R_PAREN

   80 term_exp: expression
   81         | expression COMMA term_exp
   82         | expression error term_exp

   83 var: ident
   84    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   85    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   86 ident: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256) 7 9 11 13 16 30 36 37 82
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 17 18 19
ARRAY (266) 18 19
OF (267) 18 19
IF (268) 31 32
THEN (269) 31 32
ENDIF (270) 31 32
ELSE (271) 32
WHILE (272) 33 34
DO (273) 34
FOR (274) 35 36 37
BEGINLOOP (275) 33 34 35 36 37
ENDLOOP (276) 33 34 35 36 37
CONTINUE (277) 43
READ (278) 38
WRITE (279) 39
AND (280) 50
OR (281) 47
TRUE (282) 54
FALSE (283) 55
RETURN (284) 44
SEMICOLON (285) 4 6 8 10 35 36 37
COLON (286) 12
COMMA (287) 15 41 81
L_PAREN (288) 56 77 78 79
R_PAREN (289) 56 77 78 79
L_SQUARE_BRACKET (290) 18 19 84 85
R_SQUARE_BRACKET (291) 18 19 84 85
IDENT (292) 86
NUMBER (293) 18 19 35 36 37 76
GTE (294) 62
LTE (295) 61
GT (296) 60
LT (297) 59
NEQ (298) 58
EQ (299) 57
MOD (300) 71
DIV (301) 70
MULT (302) 69
ADD (303) 65
SUB (304) 66 73
UMINUS (305)
ASSIGN (306) 29 35 36 37
NOT (307) 52


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
dec_loop (57)
    on left: 5 6 7, on right: 4 6 7
statement_loop (58)
    on left: 8 9 10 11, on right: 4 10 11 31 32 33 34 35 36 37
declaration (59)
    on left: 12 13, on right: 6 7
id_loop (60)
    on left: 14 15 16, on right: 12 13 15 16
assignment (61)
    on left: 17 18 19, on right: 12 13
statement (62)
    on left: 20 21 22 23 24 25 26 27 28, on right: 8 9 10 11
A (63)
    on left: 29 30, on right: 20
B (64)
    on left: 31 32, on right: 21
C (65)
    on left: 33, on right: 22
D (66)
    on left: 34, on right: 23
E (67)
    on left: 35 36 37, on right: 24
F (68)
    on left: 38, on right: 25
G (69)
    on left: 39, on right: 26
var_loop (70)
    on left: 40 41 42, on right: 38 39 41 42
H (71)
    on left: 43, on right: 27
I (72)
    on left: 44, on right: 28
bool_expr (73)
    on left: 45, on right: 31 32 33 34 35 36 37 56
bool_expr_loop (74)
    on left: 46 47, on right: 45 47
relation_and_expr (75)
    on left: 48, on right: 45 47
relation_and_expr_loop (76)
    on left: 49 50, on right: 48 50
relation_expr (77)
    on left: 51 52, on right: 48 50
relations (78)
    on left: 53 54 55 56, on right: 51 52
comp (79)
    on left: 57 58 59 60 61 62, on right: 53
expression (80)
    on left: 63, on right: 29 30 35 36 37 44 53 77 80 81 82 84 85
expression_loop (81)
    on left: 64 65 66, on right: 63 65 66
multiplicative_expr (82)
    on left: 67, on right: 63 65 66
multi_loop (83)
    on left: 68 69 70 71, on right: 67 69 70 71
term (84)
    on left: 72 73 74, on right: 67 69 70 71
term_top (85)
    on left: 75 76 77, on right: 72 73
term_expression (86)
    on left: 78 79, on right: 74
term_exp (87)
    on left: 80 81 82, on right: 78 81 82
var (88)
    on left: 83 84 85, on right: 29 30 35 36 37 40 41 42 75
ident (89)
    on left: 86, on right: 4 14 15 16 74 83 84 85


state 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    Program    go to state 2
    functions  go to state 3
    function   go to state 4


state 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 7


state 3

    1 Program: functions .

    $default  reduce using rule 1 (Program)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


state 5

   86 ident: IDENT .

    $default  reduce using rule 86 (ident)


state 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    SEMICOLON  shift, and go to state 9


state 7

    0 $accept: Program $end .

    $default  accept


state 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 10


state 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (dec_loop)

    dec_loop     go to state 11
    declaration  go to state 12
    id_loop      go to state 13
    ident        go to state 14


state 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS dec_loop . END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    END_PARAMS  shift, and go to state 15


state 12

    6 dec_loop: declaration . SEMICOLON dec_loop
    7         | declaration . error dec_loop

    error      shift, and go to state 16
    SEMICOLON  shift, and go to state 17


state 13

   12 declaration: id_loop . COLON assignment
   13            | id_loop . error assignment
   15 id_loop: id_loop . COMMA ident
   16        | id_loop . error ident

    error  shift, and go to state 18
    COLON  shift, and go to state 19
    COMMA  shift, and go to state 20


state 14

   14 id_loop: ident .

    $default  reduce using rule 14 (id_loop)


state 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS . BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 21


state 16

    7 dec_loop: declaration error . dec_loop

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (dec_loop)

    dec_loop     go to state 22
    declaration  go to state 12
    id_loop      go to state 13
    ident        go to state 14


state 17

    6 dec_loop: declaration SEMICOLON . dec_loop

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (dec_loop)

    dec_loop     go to state 23
    declaration  go to state 12
    id_loop      go to state 13
    ident        go to state 14


state 18

   13 declaration: id_loop error . assignment
   16 id_loop: id_loop error . ident

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25
    IDENT    shift, and go to state 5

    assignment  go to state 26
    ident       go to state 27


state 19

   12 declaration: id_loop COLON . assignment

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    assignment  go to state 28


state 20

   15 id_loop: id_loop COMMA . ident

    IDENT  shift, and go to state 5

    ident  go to state 29


state 21

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS . dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (dec_loop)

    dec_loop     go to state 30
    declaration  go to state 12
    id_loop      go to state 13
    ident        go to state 14


state 22

    7 dec_loop: declaration error dec_loop .

    $default  reduce using rule 7 (dec_loop)


state 23

    6 dec_loop: declaration SEMICOLON dec_loop .

    $default  reduce using rule 6 (dec_loop)


state 24

   17 assignment: INTEGER .

    $default  reduce using rule 17 (assignment)


state 25

   18 assignment: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   19           | ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 31


state 26

   13 declaration: id_loop error assignment .

    $default  reduce using rule 13 (declaration)


state 27

   16 id_loop: id_loop error ident .

    $default  reduce using rule 16 (id_loop)


state 28

   12 declaration: id_loop COLON assignment .

    $default  reduce using rule 12 (declaration)


state 29

   15 id_loop: id_loop COMMA ident .

    $default  reduce using rule 15 (id_loop)


state 30

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop . END_LOCALS BEGIN_BODY statement_loop END_BODY

    END_LOCALS  shift, and go to state 32


state 31

   18 assignment: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   19           | ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 33


state 32

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS . BEGIN_BODY statement_loop END_BODY

    BEGIN_BODY  shift, and go to state 34


state 33

   18 assignment: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   19           | ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 35


state 34

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY . statement_loop END_BODY

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement_loop  go to state 44
    statement       go to state 45
    A               go to state 46
    B               go to state 47
    C               go to state 48
    D               go to state 49
    E               go to state 50
    F               go to state 51
    G               go to state 52
    H               go to state 53
    I               go to state 54
    var             go to state 55
    ident           go to state 56


state 35

   18 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   19           | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 57
    L_SQUARE_BRACKET  shift, and go to state 58


state 36

   31 B: IF . bool_expr THEN statement_loop ENDIF
   32  | IF . bool_expr THEN statement_loop ELSE statement_loop ENDIF

    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_expr            go to state 65
    relation_and_expr    go to state 66
    relation_expr        go to state 67
    relations            go to state 68
    expression           go to state 69
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 37

   33 C: WHILE . bool_expr BEGINLOOP statement_loop ENDLOOP

    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_expr            go to state 75
    relation_and_expr    go to state 66
    relation_expr        go to state 67
    relations            go to state 68
    expression           go to state 69
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 38

   34 D: DO . BEGINLOOP statement_loop ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 76


state 39

   35 E: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   36  | FOR . var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   37  | FOR . var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    IDENT  shift, and go to state 5

    var    go to state 77
    ident  go to state 56


state 40

   43 H: CONTINUE .

    $default  reduce using rule 43 (H)


state 41

   38 F: READ . var_loop

    IDENT  shift, and go to state 5

    var_loop  go to state 78
    var       go to state 79
    ident     go to state 56


state 42

   39 G: WRITE . var_loop

    IDENT  shift, and go to state 5

    var_loop  go to state 80
    var       go to state 79
    ident     go to state 56


state 43

   44 I: RETURN . expression

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 82
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 44

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop . END_BODY
   10 statement_loop: statement_loop . statement SEMICOLON
   11               | statement_loop . statement error

    END_BODY  shift, and go to state 83
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 84
    A          go to state 46
    B          go to state 47
    C          go to state 48
    D          go to state 49
    E          go to state 50
    F          go to state 51
    G          go to state 52
    H          go to state 53
    I          go to state 54
    var        go to state 55
    ident      go to state 56


state 45

    8 statement_loop: statement . SEMICOLON
    9               | statement . error

    error      shift, and go to state 85
    SEMICOLON  shift, and go to state 86


state 46

   20 statement: A .

    $default  reduce using rule 20 (statement)


state 47

   21 statement: B .

    $default  reduce using rule 21 (statement)


state 48

   22 statement: C .

    $default  reduce using rule 22 (statement)


state 49

   23 statement: D .

    $default  reduce using rule 23 (statement)


state 50

   24 statement: E .

    $default  reduce using rule 24 (statement)


state 51

   25 statement: F .

    $default  reduce using rule 25 (statement)


state 52

   26 statement: G .

    $default  reduce using rule 26 (statement)


state 53

   27 statement: H .

    $default  reduce using rule 27 (statement)


state 54

   28 statement: I .

    $default  reduce using rule 28 (statement)


state 55

   29 A: var . ASSIGN expression
   30  | var . error expression

    error   shift, and go to state 87
    ASSIGN  shift, and go to state 88


state 56

   83 var: ident .
   84    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   85    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 89

    $default  reduce using rule 83 (var)


state 57

   18 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 90


state 58

   19 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 91


state 59

   54 relations: TRUE .

    $default  reduce using rule 54 (relations)


state 60

   55 relations: FALSE .

    $default  reduce using rule 55 (relations)


state 61

   56 relations: L_PAREN . bool_expr R_PAREN
   77 term_top: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_expr            go to state 92
    relation_and_expr    go to state 66
    relation_expr        go to state 67
    relations            go to state 68
    expression           go to state 93
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 62

   76 term_top: NUMBER .

    $default  reduce using rule 76 (term_top)


state 63

   73 term: SUB . term_top

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62

    term_top  go to state 94
    var       go to state 73
    ident     go to state 56


state 64

   52 relation_expr: NOT . relations

    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    relations            go to state 95
    expression           go to state 69
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 65

   31 B: IF bool_expr . THEN statement_loop ENDIF
   32  | IF bool_expr . THEN statement_loop ELSE statement_loop ENDIF

    THEN  shift, and go to state 96


state 66

   45 bool_expr: relation_and_expr . bool_expr_loop

    $default  reduce using rule 46 (bool_expr_loop)

    bool_expr_loop  go to state 97


state 67

   48 relation_and_expr: relation_expr . relation_and_expr_loop

    $default  reduce using rule 49 (relation_and_expr_loop)

    relation_and_expr_loop  go to state 98


state 68

   51 relation_expr: relations .

    $default  reduce using rule 51 (relation_expr)


state 69

   53 relations: expression . comp expression

    GTE  shift, and go to state 99
    LTE  shift, and go to state 100
    GT   shift, and go to state 101
    LT   shift, and go to state 102
    NEQ  shift, and go to state 103
    EQ   shift, and go to state 104

    comp  go to state 105


state 70

   63 expression: multiplicative_expr . expression_loop

    $default  reduce using rule 64 (expression_loop)

    expression_loop  go to state 106


state 71

   67 multiplicative_expr: term . multi_loop

    $default  reduce using rule 68 (multi_loop)

    multi_loop  go to state 107


state 72

   72 term: term_top .

    $default  reduce using rule 72 (term)


state 73

   75 term_top: var .

    $default  reduce using rule 75 (term_top)


state 74

   74 term: ident . term_expression
   83 var: ident .
   84    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   85    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 108
    L_SQUARE_BRACKET  shift, and go to state 89

    $default  reduce using rule 83 (var)

    term_expression  go to state 109


state 75

   33 C: WHILE bool_expr . BEGINLOOP statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 110


state 76

   34 D: DO BEGINLOOP . statement_loop ENDLOOP WHILE bool_expr

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement_loop  go to state 111
    statement       go to state 45
    A               go to state 46
    B               go to state 47
    C               go to state 48
    D               go to state 49
    E               go to state 50
    F               go to state 51
    G               go to state 52
    H               go to state 53
    I               go to state 54
    var             go to state 55
    ident           go to state 56


state 77

   35 E: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   36  | FOR var . ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   37  | FOR var . ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    ASSIGN  shift, and go to state 112


state 78

   38 F: READ var_loop .

    $default  reduce using rule 38 (F)


state 79

   40 var_loop: var .
   41         | var . COMMA var_loop
   42         | var . var_loop

    COMMA  shift, and go to state 113
    IDENT  shift, and go to state 5

    $default  reduce using rule 40 (var_loop)

    var_loop  go to state 114
    var       go to state 79
    ident     go to state 56


state 80

   39 G: WRITE var_loop .

    $default  reduce using rule 39 (G)


state 81

   77 term_top: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 115
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 82

   44 I: RETURN expression .

    $default  reduce using rule 44 (I)


state 83

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS dec_loop END_PARAMS BEGIN_LOCALS dec_loop END_LOCALS BEGIN_BODY statement_loop END_BODY .

    $default  reduce using rule 4 (function)


state 84

   10 statement_loop: statement_loop statement . SEMICOLON
   11               | statement_loop statement . error

    error      shift, and go to state 116
    SEMICOLON  shift, and go to state 117


state 85

    9 statement_loop: statement error .

    $default  reduce using rule 9 (statement_loop)


state 86

    8 statement_loop: statement SEMICOLON .

    $default  reduce using rule 8 (statement_loop)


state 87

   30 A: var error . expression

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 118
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 88

   29 A: var ASSIGN . expression

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 119
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 89

   84 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   85    | ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 120
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 90

   18 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 18 (assignment)


state 91

   19 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 121


state 92

   56 relations: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 122


state 93

   53 relations: expression . comp expression
   77 term_top: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 123
    GTE      shift, and go to state 99
    LTE      shift, and go to state 100
    GT       shift, and go to state 101
    LT       shift, and go to state 102
    NEQ      shift, and go to state 103
    EQ       shift, and go to state 104

    comp  go to state 105


state 94

   73 term: SUB term_top .

    $default  reduce using rule 73 (term)


state 95

   52 relation_expr: NOT relations .

    $default  reduce using rule 52 (relation_expr)


state 96

   31 B: IF bool_expr THEN . statement_loop ENDIF
   32  | IF bool_expr THEN . statement_loop ELSE statement_loop ENDIF

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement_loop  go to state 124
    statement       go to state 45
    A               go to state 46
    B               go to state 47
    C               go to state 48
    D               go to state 49
    E               go to state 50
    F               go to state 51
    G               go to state 52
    H               go to state 53
    I               go to state 54
    var             go to state 55
    ident           go to state 56


state 97

   45 bool_expr: relation_and_expr bool_expr_loop .
   47 bool_expr_loop: bool_expr_loop . OR relation_and_expr

    OR  shift, and go to state 125

    $default  reduce using rule 45 (bool_expr)


state 98

   48 relation_and_expr: relation_expr relation_and_expr_loop .
   50 relation_and_expr_loop: relation_and_expr_loop . AND relation_expr

    AND  shift, and go to state 126

    $default  reduce using rule 48 (relation_and_expr)


state 99

   62 comp: GTE .

    $default  reduce using rule 62 (comp)


state 100

   61 comp: LTE .

    $default  reduce using rule 61 (comp)


state 101

   60 comp: GT .

    $default  reduce using rule 60 (comp)


state 102

   59 comp: LT .

    $default  reduce using rule 59 (comp)


state 103

   58 comp: NEQ .

    $default  reduce using rule 58 (comp)


state 104

   57 comp: EQ .

    $default  reduce using rule 57 (comp)


state 105

   53 relations: expression comp . expression

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 127
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 106

   63 expression: multiplicative_expr expression_loop .
   65 expression_loop: expression_loop . ADD multiplicative_expr
   66                | expression_loop . SUB multiplicative_expr

    ADD  shift, and go to state 128
    SUB  shift, and go to state 129

    $default  reduce using rule 63 (expression)


state 107

   67 multiplicative_expr: term multi_loop .
   69 multi_loop: multi_loop . MULT term
   70           | multi_loop . DIV term
   71           | multi_loop . MOD term

    MOD   shift, and go to state 130
    DIV   shift, and go to state 131
    MULT  shift, and go to state 132

    $default  reduce using rule 67 (multiplicative_expr)


state 108

   78 term_expression: L_PAREN . term_exp R_PAREN
   79                | L_PAREN . R_PAREN

    L_PAREN  shift, and go to state 81
    R_PAREN  shift, and go to state 133
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 134
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    term_exp             go to state 135
    var                  go to state 73
    ident                go to state 74


state 109

   74 term: ident term_expression .

    $default  reduce using rule 74 (term)


state 110

   33 C: WHILE bool_expr BEGINLOOP . statement_loop ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement_loop  go to state 136
    statement       go to state 45
    A               go to state 46
    B               go to state 47
    C               go to state 48
    D               go to state 49
    E               go to state 50
    F               go to state 51
    G               go to state 52
    H               go to state 53
    I               go to state 54
    var             go to state 55
    ident           go to state 56


state 111

   10 statement_loop: statement_loop . statement SEMICOLON
   11               | statement_loop . statement error
   34 D: DO BEGINLOOP statement_loop . ENDLOOP WHILE bool_expr

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 137
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 84
    A          go to state 46
    B          go to state 47
    C          go to state 48
    D          go to state 49
    E          go to state 50
    F          go to state 51
    G          go to state 52
    H          go to state 53
    I          go to state 54
    var        go to state 55
    ident      go to state 56


state 112

   35 E: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   36  | FOR var ASSIGN . NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   37  | FOR var ASSIGN . NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    NUMBER  shift, and go to state 138


state 113

   41 var_loop: var COMMA . var_loop

    IDENT  shift, and go to state 5

    var_loop  go to state 139
    var       go to state 79
    ident     go to state 56


state 114

   42 var_loop: var var_loop .

    $default  reduce using rule 42 (var_loop)


state 115

   77 term_top: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 123


state 116

   11 statement_loop: statement_loop statement error .

    $default  reduce using rule 11 (statement_loop)


state 117

   10 statement_loop: statement_loop statement SEMICOLON .

    $default  reduce using rule 10 (statement_loop)


state 118

   30 A: var error expression .

    $default  reduce using rule 30 (A)


state 119

   29 A: var ASSIGN expression .

    $default  reduce using rule 29 (A)


state 120

   84 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   85    | ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 140


state 121

   19 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 141


state 122

   56 relations: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 56 (relations)


state 123

   77 term_top: L_PAREN expression R_PAREN .

    $default  reduce using rule 77 (term_top)


state 124

   10 statement_loop: statement_loop . statement SEMICOLON
   11               | statement_loop . statement error
   31 B: IF bool_expr THEN statement_loop . ENDIF
   32  | IF bool_expr THEN statement_loop . ELSE statement_loop ENDIF

    IF        shift, and go to state 36
    ENDIF     shift, and go to state 142
    ELSE      shift, and go to state 143
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 84
    A          go to state 46
    B          go to state 47
    C          go to state 48
    D          go to state 49
    E          go to state 50
    F          go to state 51
    G          go to state 52
    H          go to state 53
    I          go to state 54
    var        go to state 55
    ident      go to state 56


state 125

   47 bool_expr_loop: bool_expr_loop OR . relation_and_expr

    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    relation_and_expr    go to state 144
    relation_expr        go to state 67
    relations            go to state 68
    expression           go to state 69
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 126

   50 relation_and_expr_loop: relation_and_expr_loop AND . relation_expr

    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    relation_expr        go to state 145
    relations            go to state 68
    expression           go to state 69
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 127

   53 relations: expression comp expression .

    $default  reduce using rule 53 (relations)


state 128

   65 expression_loop: expression_loop ADD . multiplicative_expr

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    multiplicative_expr  go to state 146
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 129

   66 expression_loop: expression_loop SUB . multiplicative_expr

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    multiplicative_expr  go to state 147
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 130

   71 multi_loop: multi_loop MOD . term

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    term      go to state 148
    term_top  go to state 72
    var       go to state 73
    ident     go to state 74


state 131

   70 multi_loop: multi_loop DIV . term

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    term      go to state 149
    term_top  go to state 72
    var       go to state 73
    ident     go to state 74


state 132

   69 multi_loop: multi_loop MULT . term

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    term      go to state 150
    term_top  go to state 72
    var       go to state 73
    ident     go to state 74


state 133

   79 term_expression: L_PAREN R_PAREN .

    $default  reduce using rule 79 (term_expression)


state 134

   80 term_exp: expression .
   81         | expression . COMMA term_exp
   82         | expression . error term_exp

    error  shift, and go to state 151
    COMMA  shift, and go to state 152

    R_PAREN  reduce using rule 80 (term_exp)


state 135

   78 term_expression: L_PAREN term_exp . R_PAREN

    R_PAREN  shift, and go to state 153


state 136

   10 statement_loop: statement_loop . statement SEMICOLON
   11               | statement_loop . statement error
   33 C: WHILE bool_expr BEGINLOOP statement_loop . ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 154
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 84
    A          go to state 46
    B          go to state 47
    C          go to state 48
    D          go to state 49
    E          go to state 50
    F          go to state 51
    G          go to state 52
    H          go to state 53
    I          go to state 54
    var        go to state 55
    ident      go to state 56


state 137

   34 D: DO BEGINLOOP statement_loop ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 155


state 138

   35 E: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   36  | FOR var ASSIGN NUMBER . error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   37  | FOR var ASSIGN NUMBER . SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    error      shift, and go to state 156
    SEMICOLON  shift, and go to state 157


state 139

   41 var_loop: var COMMA var_loop .

    $default  reduce using rule 41 (var_loop)


state 140

   84 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   85    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 158

    $default  reduce using rule 84 (var)


state 141

   19 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 159


state 142

   31 B: IF bool_expr THEN statement_loop ENDIF .

    $default  reduce using rule 31 (B)


state 143

   32 B: IF bool_expr THEN statement_loop ELSE . statement_loop ENDIF

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement_loop  go to state 160
    statement       go to state 45
    A               go to state 46
    B               go to state 47
    C               go to state 48
    D               go to state 49
    E               go to state 50
    F               go to state 51
    G               go to state 52
    H               go to state 53
    I               go to state 54
    var             go to state 55
    ident           go to state 56


state 144

   47 bool_expr_loop: bool_expr_loop OR relation_and_expr .

    $default  reduce using rule 47 (bool_expr_loop)


state 145

   50 relation_and_expr_loop: relation_and_expr_loop AND relation_expr .

    $default  reduce using rule 50 (relation_and_expr_loop)


state 146

   65 expression_loop: expression_loop ADD multiplicative_expr .

    $default  reduce using rule 65 (expression_loop)


state 147

   66 expression_loop: expression_loop SUB multiplicative_expr .

    $default  reduce using rule 66 (expression_loop)


state 148

   71 multi_loop: multi_loop MOD term .

    $default  reduce using rule 71 (multi_loop)


state 149

   70 multi_loop: multi_loop DIV term .

    $default  reduce using rule 70 (multi_loop)


state 150

   69 multi_loop: multi_loop MULT term .

    $default  reduce using rule 69 (multi_loop)


state 151

   82 term_exp: expression error . term_exp

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 134
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    term_exp             go to state 161
    var                  go to state 73
    ident                go to state 74


state 152

   81 term_exp: expression COMMA . term_exp

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 134
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    term_exp             go to state 162
    var                  go to state 73
    ident                go to state 74


state 153

   78 term_expression: L_PAREN term_exp R_PAREN .

    $default  reduce using rule 78 (term_expression)


state 154

   33 C: WHILE bool_expr BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 33 (C)


state 155

   34 D: DO BEGINLOOP statement_loop ENDLOOP WHILE . bool_expr

    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_expr            go to state 163
    relation_and_expr    go to state 66
    relation_expr        go to state 67
    relations            go to state 68
    expression           go to state 69
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 156

   36 E: FOR var ASSIGN NUMBER error . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_expr            go to state 164
    relation_and_expr    go to state 66
    relation_expr        go to state 67
    relations            go to state 68
    expression           go to state 69
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 157

   35 E: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   37  | FOR var ASSIGN NUMBER SEMICOLON . bool_expr error var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_expr            go to state 165
    relation_and_expr    go to state 66
    relation_expr        go to state 67
    relations            go to state 68
    expression           go to state 69
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 158

   85 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 166
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 159

   19 assignment: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 19 (assignment)


state 160

   10 statement_loop: statement_loop . statement SEMICOLON
   11               | statement_loop . statement error
   32 B: IF bool_expr THEN statement_loop ELSE statement_loop . ENDIF

    IF        shift, and go to state 36
    ENDIF     shift, and go to state 167
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 84
    A          go to state 46
    B          go to state 47
    C          go to state 48
    D          go to state 49
    E          go to state 50
    F          go to state 51
    G          go to state 52
    H          go to state 53
    I          go to state 54
    var        go to state 55
    ident      go to state 56


state 161

   82 term_exp: expression error term_exp .

    $default  reduce using rule 82 (term_exp)


state 162

   81 term_exp: expression COMMA term_exp .

    $default  reduce using rule 81 (term_exp)


state 163

   34 D: DO BEGINLOOP statement_loop ENDLOOP WHILE bool_expr .

    $default  reduce using rule 34 (D)


state 164

   36 E: FOR var ASSIGN NUMBER error bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    SEMICOLON  shift, and go to state 168


state 165

   35 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP
   37  | FOR var ASSIGN NUMBER SEMICOLON bool_expr . error var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    error      shift, and go to state 169
    SEMICOLON  shift, and go to state 170


state 166

   85 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 171


state 167

   32 B: IF bool_expr THEN statement_loop ELSE statement_loop ENDIF .

    $default  reduce using rule 32 (B)


state 168

   36 E: FOR var ASSIGN NUMBER error bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    IDENT  shift, and go to state 5

    var    go to state 172
    ident  go to state 56


state 169

   37 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr error . var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    IDENT  shift, and go to state 5

    var    go to state 173
    ident  go to state 56


state 170

   35 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    IDENT  shift, and go to state 5

    var    go to state 174
    ident  go to state 56


state 171

   85 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 85 (var)


state 172

   36 E: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    ASSIGN  shift, and go to state 175


state 173

   37 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var . ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    ASSIGN  shift, and go to state 176


state 174

   35 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statement_loop ENDLOOP

    ASSIGN  shift, and go to state 177


state 175

   36 E: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statement_loop ENDLOOP

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 178
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 176

   37 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN . expression BEGINLOOP statement_loop ENDLOOP

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 179
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 177

   35 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statement_loop ENDLOOP

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 62
    SUB      shift, and go to state 63

    expression           go to state 180
    multiplicative_expr  go to state 70
    term                 go to state 71
    term_top             go to state 72
    var                  go to state 73
    ident                go to state 74


state 178

   36 E: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 181


state 179

   37 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression . BEGINLOOP statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 182


state 180

   35 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 183


state 181

   36 E: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statement_loop ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement_loop  go to state 184
    statement       go to state 45
    A               go to state 46
    B               go to state 47
    C               go to state 48
    D               go to state 49
    E               go to state 50
    F               go to state 51
    G               go to state 52
    H               go to state 53
    I               go to state 54
    var             go to state 55
    ident           go to state 56


state 182

   37 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP . statement_loop ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement_loop  go to state 185
    statement       go to state 45
    A               go to state 46
    B               go to state 47
    C               go to state 48
    D               go to state 49
    E               go to state 50
    F               go to state 51
    G               go to state 52
    H               go to state 53
    I               go to state 54
    var             go to state 55
    ident           go to state 56


state 183

   35 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statement_loop ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement_loop  go to state 186
    statement       go to state 45
    A               go to state 46
    B               go to state 47
    C               go to state 48
    D               go to state 49
    E               go to state 50
    F               go to state 51
    G               go to state 52
    H               go to state 53
    I               go to state 54
    var             go to state 55
    ident           go to state 56


state 184

   10 statement_loop: statement_loop . statement SEMICOLON
   11               | statement_loop . statement error
   36 E: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop . ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 187
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 84
    A          go to state 46
    B          go to state 47
    C          go to state 48
    D          go to state 49
    E          go to state 50
    F          go to state 51
    G          go to state 52
    H          go to state 53
    I          go to state 54
    var        go to state 55
    ident      go to state 56


state 185

   10 statement_loop: statement_loop . statement SEMICOLON
   11               | statement_loop . statement error
   37 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statement_loop . ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 188
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 84
    A          go to state 46
    B          go to state 47
    C          go to state 48
    D          go to state 49
    E          go to state 50
    F          go to state 51
    G          go to state 52
    H          go to state 53
    I          go to state 54
    var        go to state 55
    ident      go to state 56


state 186

   10 statement_loop: statement_loop . statement SEMICOLON
   11               | statement_loop . statement error
   35 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop . ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    FOR       shift, and go to state 39
    ENDLOOP   shift, and go to state 189
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    RETURN    shift, and go to state 43
    IDENT     shift, and go to state 5

    statement  go to state 84
    A          go to state 46
    B          go to state 47
    C          go to state 48
    D          go to state 49
    E          go to state 50
    F          go to state 51
    G          go to state 52
    H          go to state 53
    I          go to state 54
    var        go to state 55
    ident      go to state 56


state 187

   36 E: FOR var ASSIGN NUMBER error bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 36 (E)


state 188

   37 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr error var ASSIGN expression BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 37 (E)


state 189

   35 E: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 35 (E)
